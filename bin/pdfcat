#!/usr/bin/env bash

# ------------------------------------------------------------------------------
# A quick hack to replace pdfunite as it destroys too much of the original's
# meta data.
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Author:        Urs Roesch <github@bun.ch>
# License:       MIT
# Requires:      bash, pdftk >= 2.0
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Globals
# ------------------------------------------------------------------------------
declare -r PDFCAT_VERSION=0.2
declare -r PRODUCER="pdfcat ${PDFCAT_VERSION}"
declare -r PDFCAT_SCRIPT=${0##*/}
declare -r ARGUMENTS=$#
declare -r REQUIRE_PDFTK=2

# ------------------------------------------------------------------------------
# Functions
# ------------------------------------------------------------------------------

function pdftk_major() {
  pdftk --version | \
    awk '/^pdftk/ { print int(gensub("[^0-9.]", "", "g", $0)); exit }'
}

# ------------------------------------------------------------------------------

function pdfcat::check_compatibility() {
  if ! which pdftk &>/dev/null; then
    echo "Required binary 'pdftk' was not found on this system" 1&>2
    exit 127
  else
    if [[ $(pdftk_major) -lt ${REQUIRE_PDFTK} ]]; then
      echo "Pdftk version ${REQUIRE_PDFTK}  or higher is required!" 1&>2
      exit 128
    fi
  fi
}

# ------------------------------------------------------------------------------

function pdfcat::usage() {
  local exit_code=$1; shift;
  echo "  Usage:"
  echo "    ${PDFCAT_SCRIPT} <pdf> <pdf> [..]"
  echo ""
  exit ${exit_code}
}

# ------------------------------------------------------------------------------

function pdfcat::fetch_meta() {
  local file="$1"; shift;
  pdftk "${file}" dump_data_utf8 output - | grep ^Info
}

# ------------------------------------------------------------------------------

function pdfcat::concat_pdf() {
  [[ $# -eq 0 ]] && return
  local meta=$( pdfcat::fetch_meta "$1" )
  pdftk "$@" cat output - | pdfcat::write_meta "${meta}" 2>/dev/null
}

# ------------------------------------------------------------------------------

function pdfcat::write_meta() {
  local meta="$1"; shift;
  pdftk - update_info_utf8 <( echo "${meta}" ) output -
}

# ------------------------------------------------------------------------------
# Main
# ------------------------------------------------------------------------------
pdfcat::check_compatibility

if [[ $0 == ${BASH_SOURCE} && ${ARGUMENTS} -lt 2 ]]; then
  pdfcat::usage 1;
fi

pdfcat::concat_pdf "$@"
